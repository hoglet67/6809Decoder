opcode=&80
acca=&81
stack=&82
FOR I%=&10 TO &13 STEP 3
P%=&3000
[OPT I%
.test
PSHS CC
ORCC #&50
STS stack
CLR opcode
CLR acca
.loop
\ Setup two instruction test sequence
LDA #&87    \ X87
STA instr2
LDA #&AA    \ &AA
STA instr2+1
LDA #&12    \ NOP
STA instr2+2
STA instr1
STA instr1+1
STA instr1+2
STA instr1+3
LDX #op_table
LDA <opcode
LDB A,X
BMI skip
\ B is instr len (1,2,3)
NEGB
\ B is offset before instr2 (-1,-2,-3)
LDX #instr2
STA B,X
\ Add a prefix
LEAX -1,X
LDA #&10
STA B,X
LDA <acca
LDB <acca
LDX #&5000
LDY #&5800
LDS #&6000
LDU #&6800
COMB
.instr1 \ Some other instruction
NOP
NOP
NOP
NOP
.instr2 \ X87 &AA
NOP
NOP
NOP
PSHS CC,A,B
LDS stack
INC acca
BNE loop
.skip
INC opcode
BNE loop
LDS stack
PULS CC
RTS
\ 8x
EQUB &02:EQUB &02:EQUB &02:EQUB &03
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &03:EQUB &FF:EQUB &03:EQUB &02
\ 9x
EQUB &02:EQUB &02:EQUB &02:EQUB &03
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &FF:EQUB &02:EQUB &02
\ Ax
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &FF:EQUB &02:EQUB &02
\ Bx
EQUB &03:EQUB &03:EQUB &03:EQUB &03
EQUB &03:EQUB &03:EQUB &03:EQUB &03
EQUB &03:EQUB &03:EQUB &03:EQUB &03
EQUB &03:EQUB &FF:EQUB &03:EQUB &03
\ Cx
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &03:EQUB &FF:EQUB &03:EQUB &02
\ Dx
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
\ Ex
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
\ Fx
EQUB &03:EQUB &03:EQUB &03:EQUB &03
EQUB &03:EQUB &03:EQUB &03:EQUB &03
EQUB &03:EQUB &03:EQUB &03:EQUB &03
EQUB &03:EQUB &03:EQUB &03:EQUB &03
.op_table
\ 0x
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &FF:EQUB &02
\ 1x
EQUB &FF:EQUB &FF:EQUB &01:EQUB &FF
EQUB &FF:EQUB &FF:EQUB &FF:EQUB &FF
EQUB &FF:EQUB &01:EQUB &FF:EQUB &FF
EQUB &FF:EQUB &01:EQUB &02:EQUB &02
\ 2x
EQUB &FF:EQUB &FF:EQUB &FF:EQUB &FF
EQUB &FF:EQUB &FF:EQUB &FF:EQUB &FF
EQUB &FF:EQUB &FF:EQUB &FF:EQUB &FF
EQUB &FF:EQUB &FF:EQUB &FF:EQUB &FF
\ 3x
EQUB &02:EQUB &02:EQUB &FF:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &FF:EQUB &FF:EQUB &01:EQUB &FF
EQUB &FF:EQUB &01:EQUB &FF:EQUB &FF
\ 4x
EQUB &01:EQUB &01:EQUB &01:EQUB &01
EQUB &01:EQUB &01:EQUB &01:EQUB &01
EQUB &01:EQUB &01:EQUB &01:EQUB &01
EQUB &01:EQUB &01:EQUB &01:EQUB &01
\ 5x
EQUB &01:EQUB &01:EQUB &01:EQUB &01
EQUB &01:EQUB &01:EQUB &01:EQUB &01
EQUB &01:EQUB &01:EQUB &01:EQUB &01
EQUB &01:EQUB &01:EQUB &01:EQUB &01
\ 6x
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &02:EQUB &02
EQUB &02:EQUB &02:EQUB &FF:EQUB &02
\ 7x
EQUB &03:EQUB &03:EQUB &03:EQUB &03
EQUB &03:EQUB &03:EQUB &03:EQUB &03
EQUB &03:EQUB &03:EQUB &03:EQUB &03
EQUB &03:EQUB &03:EQUB &FF:EQUB &03
]
NEXT
PRINT "Press a key to run test"
Z=GET
CALL test
